import { supabase, isSupabaseAvailable } from './supabaseClient';
import { logger } from './logger';

/**
 * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
 */
export const clearAllUserData = async (userId: string): Promise<boolean> => {
  if (!userId || !isSupabaseAvailable() || !supabase) {
    logger.sync('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase');
    return false;
  }

  try {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã wishlist –∏–∑ Supabase
    const { error: wishlistError } = await supabase
      .from('wishlist_items')
      .delete()
      .eq('user_id', userId);

    if (wishlistError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è wishlist –∏–∑ Supabase:', wishlistError);
      throw wishlistError;
    }

    // 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ Supabase
    const { error: categoriesError } = await supabase
      .from('user_categories')
      .delete()
      .eq('user_id', userId);

    if (categoriesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ Supabase:', categoriesError);
      throw categoriesError;
    }

    // 3. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–º—É –æ—Å—Ç–∞–≤–ª—è–µ–º)
    const { error: preferencesError } = await supabase
      .from('user_preferences')
      .update({ 
        last_sync: new Date().toISOString(),
        updated_at: new Date().toISOString()
      })
      .eq('user_id', userId);

    if (preferencesError) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', preferencesError);
    }

    // 4. –û—á–∏—â–∞–µ–º localStorage
    localStorage.removeItem('wishlistApp');
    localStorage.removeItem('wishlistCategories');
    
    // 5. –û—á–∏—â–∞–µ–º –≤—Å–µ sync –¥–∞–Ω–Ω—ã–µ
    localStorage.removeItem('wishlist-last-modified');
    localStorage.removeItem('wishlist-data-hash');
    localStorage.removeItem('wishlist-sync-state');

    // 6. –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    window.dispatchEvent(new CustomEvent('wishlistDataUpdated'));
    window.dispatchEvent(new CustomEvent('categoriesUpdated'));

    console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã');
    return true;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const checkUserDataState = async (userId: string) => {
  if (!userId || !isSupabaseAvailable() || !supabase) {
    return null;
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Supabase
    const [wishlistResult, categoriesResult] = await Promise.all([
      supabase.from('wishlist_items').select('id').eq('user_id', userId),
      supabase.from('user_categories').select('id').eq('user_id', userId)
    ]);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
    const localWishlist = JSON.parse(localStorage.getItem('wishlistApp') || '[]');
    const localCategories = JSON.parse(localStorage.getItem('wishlistCategories') || '[]');

    const state = {
      supabase: {
        wishlistCount: wishlistResult.data?.length || 0,
        categoriesCount: categoriesResult.data?.length || 0
      },
      localStorage: {
        wishlistCount: localWishlist.length,
        categoriesCount: localCategories.length
      }
    };

    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', state);
    return state;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    return null;
  }
}; 