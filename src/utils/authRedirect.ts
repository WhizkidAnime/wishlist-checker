/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ redirect URL –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è (development/production) –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 */

// –î–µ—Ç–µ–∫—Ü–∏—è iOS PWA —Ä–µ–∂–∏–º–∞
const isIOSPWA = (): boolean => {
  return (
    'standalone' in window.navigator &&
    (window.navigator as any).standalone === true &&
    /iPad|iPhone|iPod/.test(navigator.userAgent)
  );
};

// –î–µ—Ç–µ–∫—Ü–∏—è iOS Safari
const isIOSSafari = (): boolean => {
  return /iPad|iPhone|iPod/.test(navigator.userAgent) && 
         /Safari/.test(navigator.userAgent) && 
         !/Chrome|CriOS|FxiOS/.test(navigator.userAgent);
};

const getBasePath = (): string => {
  try {
    // Vite –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç BASE_URL –Ω–∞ —ç—Ç–∞–ø–µ —Å–±–æ—Ä–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '/wishlist-checker/')
    const base = (import.meta as any).env?.BASE_URL as string | undefined;
    if (base && base.startsWith('/')) {
      return base.endsWith('/') ? base : `${base}/`;
    }
  } catch {}
  // Fallback: –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å –∏–∑ –ø—É—Ç–µ–π GitHub Pages
  const pathname = window.location.pathname || '/';
  // –ï—Å–ª–∏ —Å–∞–π—Ç —Ä–∞–∑–º–µ—â—ë–Ω –∫–∞–∫ /<repo>/..., –±–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –ø–∞–ø–∫—É –∫–∞–∫ base
  const parts = pathname.split('/').filter(Boolean);
  if (parts.length > 0) {
    return `/${parts[0]}/`;
  }
  return '/';
};

export const getRedirectUrl = (): string => {
  const { protocol, hostname, port, origin } = window.location;
  const base = getBasePath();

  // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∞ –Ω–µ /auth/callback)
  // –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å GitHub Pages 404 –Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É—Ç—è—Ö
  if (hostname === 'localhost' || hostname === '127.0.0.1') {
    return `${protocol}//${hostname}:${port}${base}`;
  }
  return `${origin}${base}`;
};

export const getSiteUrl = (): string => {
  const { protocol, hostname, port, origin } = window.location;
  const base = getBasePath();

  if (hostname === 'localhost' || hostname === '127.0.0.1') {
    return `${protocol}//${hostname}:${port}${base}`;
  }
  return `${origin}${base}`;
};

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ URL –≤ –∫–æ–Ω—Å–æ–ª–∏
export const debugAuthUrls = (): void => {
  console.log('üîó Auth URLs Debug:');
  console.log('Current origin:', window.location.origin);
  console.log('Redirect URL:', getRedirectUrl());
  console.log('Site URL:', getSiteUrl());
  console.log('Hostname:', window.location.hostname);
  console.log('Protocol:', window.location.protocol);
  console.log('Port:', window.location.port);
  console.log('Is iOS PWA:', isIOSPWA());
  console.log('Is iOS Safari:', isIOSSafari());
  console.log('User Agent:', navigator.userAgent);
}; 