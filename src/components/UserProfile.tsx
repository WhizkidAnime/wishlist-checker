import React, { useState, useRef, useEffect } from 'react';
import { useAuth } from '../hooks/useAuth';
import { Portal } from './Portal';
import { useIsMobile } from '../hooks/useIsMobile';
import { clearAllUserData, checkUserDataState } from '../utils/dataCleanup';

interface UserProfileProps {
  onSignInClick: () => void;
}

export const UserProfile: React.FC<UserProfileProps> = ({ onSignInClick }) => {
  const { user, isAuthenticated, signOut } = useAuth();
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [isDataManagementOpen, setIsDataManagementOpen] = useState(false);
  const [dataState, setDataState] = useState<any>(null);
  const [isClearing, setIsClearing] = useState(false);
  const [avatarError, setAvatarError] = useState(false);
  const dropdownRef = useRef<HTMLDivElement>(null);
  const isMobile = useIsMobile();

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏
  useEffect(() => {
    if (user) {
      // console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
      //   name: user.name,
      //   email: user.email,
      //   avatar_url: user.avatar_url,
      //   provider: user.provider
      // });
    }
  }, [user]);

  // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    setAvatarError(false);
  }, [user?.id]);

  const handleSignOut = async () => {
    try {
      await signOut();
      setIsDropdownOpen(false);
    } catch (error) {
      // console.log('üö™ –ö–ª–∏–∫ –ø–æ –≤—ã—Ö–æ–¥—É');
    }
  };

  const handleMobileSignOut = async (e: React.MouseEvent) => {
    e.stopPropagation();
    // console.log('üö™ –ö–ª–∏–∫ –ø–æ –≤—ã—Ö–æ–¥—É');
    try {
      await signOut();
    } catch (error) {
      // console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
    }
  };

  const handleCheckDataState = async () => {
    if (!user?.id) return;
    
    const state = await checkUserDataState(user.id);
    setDataState(state);
  };

  const handleClearAllData = async () => {
    if (!user?.id) return;
    
    const confirmed = window.confirm(
      '‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –≤—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (—Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏) –∏–∑ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –∏–∑ –æ–±–ª–∞–∫–∞.\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?'
    );
    
    if (!confirmed) return;
    
    setIsClearing(true);
    try {
      const success = await clearAllUserData(user.id);
      if (success) {
        alert('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.');
        setDataState(null);
        setIsDataManagementOpen(false);
      } else {
        alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    } catch (error) {
      // console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
    } finally {
      setIsClearing(false);
    }
  };

  const handleDataManagementClick = (e: React.MouseEvent) => {
    e.stopPropagation();
    // console.log('üîß –ö–ª–∏–∫ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–∞–Ω–Ω—ã–º–∏');
    setIsDataManagementOpen(true);
    setIsDropdownOpen(false);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–æ–ø–¥–∞—É–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {
        setIsDropdownOpen(false);
      }
    };

    // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö - —Ç–∞–º –µ—Å—Ç—å backdrop
    if (isDropdownOpen && !isMobile) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, [isDropdownOpen, isMobile]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ URL –∞–≤–∞—Ç–∞—Ä–∫–∏ Google
  const cleanGoogleAvatarUrl = (url: string) => {
    if (!url) return url;
    
    // –î–ª—è Google –∞–≤–∞—Ç–∞—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥
    if (url.includes('googleusercontent.com')) {
      try {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π URL –æ–±—ä–µ–∫—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        const urlObj = new URL(url);
        // –î–ª—è Google –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π URL –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–∑–º–µ—Ä–∞
        const basePath = urlObj.pathname;
        return `${urlObj.origin}${basePath}=s128-c`;
      } catch (error) {
        // console.warn('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Google URL:', error);
        // Fallback: –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
        return url.replace(/=s\d+-c$/, '=s128-c');
      }
    }
    
    return url;
  };

  // –ü–æ–ª—É—á–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∫–∏
  const getAvatarUrl = () => {
    const rawUrl = user?.user_metadata?.avatar_url || user?.user_metadata?.picture;
    if (!rawUrl) return null;
    
    try {
      return cleanGoogleAvatarUrl(rawUrl);
    } catch (error) {
      // console.warn('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL –∞–≤–∞—Ç–∞—Ä–∫–∏:', error);
      return null;
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∫–∏ (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–∑–º–µ—Ä–∞)
  const getFallbackAvatarUrl = () => {
    const rawUrl = user?.user_metadata?.avatar_url || user?.user_metadata?.picture;
    if (!rawUrl) return null;
    
    if (rawUrl.includes('googleusercontent.com')) {
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å–ª–µ –∑–Ω–∞–∫–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞
      return rawUrl.split('=')[0];
    }
    
    return rawUrl;
  };

  const avatarUrl = getAvatarUrl();
  const fallbackAvatarUrl = getFallbackAvatarUrl();

  if (!isAuthenticated) {
    return (
      <button
        onClick={onSignInClick}
        className="flex items-center gap-2 px-3 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-xl transition-all duration-200 hover:bg-gray-800 dark:hover:bg-gray-200 border border-gray-900 dark:border-gray-100 h-10"
        title="–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç"
      >
        <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fillRule="evenodd" d="M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z" clipRule="evenodd" />
        </svg>
        <span className="text-sm font-medium">–í–æ–π—Ç–∏</span>
      </button>
    );
  }

  return (
    <>
      <div className="relative" ref={dropdownRef}>
        <button
          onClick={() => setIsDropdownOpen(!isDropdownOpen)}
          className="flex items-center gap-2 p-2 rounded-lg hover:bg-theme-hover transition-colors"
          title={user?.email || '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}
        >
          {!avatarError && avatarUrl ? (
            <img
              src={avatarUrl}
              alt="–ê–≤–∞—Ç–∞—Ä"
              className="w-8 h-8 rounded-full object-cover"
              onError={(e) => {
                // console.warn('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏:', avatarUrl);
                
                // –ü—Ä–æ–±—É–µ–º fallback URL
                if (fallbackAvatarUrl && avatarUrl !== fallbackAvatarUrl) {
                  // console.log('üîÑ –ü—Ä–æ–±—É–µ–º fallback URL:', fallbackAvatarUrl);
                  (e.target as HTMLImageElement).src = fallbackAvatarUrl;
                } else {
                  setAvatarError(true);
                }
              }}
            />
          ) : (
            <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-medium">
              {user?.email?.charAt(0).toUpperCase() || 'U'}
            </div>
          )}
          <svg 
            className={`w-4 h-4 text-theme-secondary transition-transform ${isDropdownOpen ? 'rotate-180' : ''}`}
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24"
          >
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
          </svg>
        </button>

        {isDropdownOpen && (
          <>
            {isMobile ? (
              // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º Portal
              <Portal>
                <div 
                  className="fixed inset-0 z-[99998] pointer-events-auto"
                  onClick={() => {
                    // console.log('–ö–ª–∏–∫ –ø–æ backdrop');
                    setIsDropdownOpen(false);
                  }} 
                />
                <div 
                  className="absolute left-1/2 transform -translate-x-1/2 bg-theme-card border border-theme-border rounded-xl shadow-lg py-2 min-w-64 z-[99999]"
                  style={{ top: 'calc(100% + 16px)' }}
                  onClick={(e) => e.stopPropagation()}
                >
                  <div className="px-4 py-2 border-b border-theme-border">
                    <div className="text-sm font-medium text-theme-primary truncate">
                      {user?.email}
                    </div>
                    <div className="text-xs text-theme-secondary">
                      {user?.user_metadata?.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                    </div>
                  </div>
                  
                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      // console.log('UserProfile: –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏!');
                      handleDataManagementClick(e);
                    }}
                    className="w-full px-4 py-2 text-left text-sm text-theme-primary hover:bg-theme-hover transition-colors flex items-center gap-2"
                  >
                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
                  </button>

                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      // console.log('UserProfile: –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –í—ã–π—Ç–∏!');
                      handleMobileSignOut(e);
                    }}
                    className="w-full px-4 py-2 text-left text-sm text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors flex items-center gap-2"
                  >
                    –í—ã–π—Ç–∏
                  </button>
                </div>
              </Portal>
            ) : (
              // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –æ–±—ã—á–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ Portal
              <div className="absolute right-0 top-full mt-2 bg-theme-card border border-theme-border rounded-xl shadow-lg py-2 min-w-64 z-50">
                <div className="px-4 py-2 border-b border-theme-border">
                  <div className="text-sm font-medium text-theme-primary truncate">
                    {user?.email}
                  </div>
                  <div className="text-xs text-theme-secondary">
                    {user?.user_metadata?.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                  </div>
                </div>
                
                <button
                  onClick={handleDataManagementClick}
                  className="w-full px-4 py-2 text-left text-sm text-theme-primary hover:bg-theme-hover transition-colors flex items-center gap-2"
                >
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
                </button>

                <button
                  onClick={handleSignOut}
                  className="w-full px-4 py-2 text-left text-sm text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors flex items-center gap-2"
                >
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                  </svg>
                  –í—ã–π—Ç–∏
                </button>
              </div>
            )}
          </>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ */}
      {isDataManagementOpen && (
        <Portal>
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-[9999] p-4">
            <div 
              className="shadow-xl max-w-md w-full p-6 rounded-3xl"
              style={{ backgroundColor: 'var(--color-card-background)' }}
            >
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-theme-primary">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
                <button
                  onClick={() => setIsDataManagementOpen(false)}
                  className="text-theme-secondary hover:text-theme-primary"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

              <div className="space-y-4">
                <div>
                  <button
                    onClick={handleCheckDataState}
                    className="w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
                  >
                    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                  </button>
                  
                  {dataState && (
                    <div className="mt-3 p-3 bg-theme-hover rounded-lg text-sm">
                      <div className="font-medium text-theme-primary mb-2">–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</div>
                      <div className="space-y-1 text-theme-secondary">
                        <div>üìä –í –æ–±–ª–∞–∫–µ: {dataState.supabase.wishlistCount} —Ç–æ–≤–∞—Ä–æ–≤, {dataState.supabase.categoriesCount} –∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
                      </div>
                    </div>
                  )}
                </div>

                <div className="border-t border-theme-border pt-4">
                  <div className="mb-3">
                    <div className="text-sm font-medium text-theme-primary mb-1">–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö</div>
                    <div className="text-xs text-theme-secondary">
                      –£–¥–∞–ª–∏—Ç –≤—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±–ª–∞–∫–∞ –∏ —Å –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π.
                    </div>
                  </div>
                  
                  <button
                    onClick={handleClearAllData}
                    disabled={isClearing}
                    className="w-full px-4 py-2 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white rounded-lg transition-colors"
                  >
                    {isClearing ? '–û—á–∏—Å—Ç–∫–∞...' : 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ'}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </Portal>
      )}
    </>
  );
}; 