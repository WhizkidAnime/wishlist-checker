import React, { useState } from 'react';
import { useAuth } from '../hooks/useAuth';

interface EmailDebugInfoProps {
  email: string;
}

export const EmailDebugInfo: React.FC<EmailDebugInfoProps> = ({ email }) => {
  const [isExpanded, setIsExpanded] = useState(false);
  const [testing, setTesting] = useState(false);
  const [testResult, setTestResult] = useState<string | null>(null);
  
  const { signInWithGoogle, isSupabaseAvailable } = useAuth();

  const handleTestEmailDelivery = async () => {
    setTesting(true);
    setTestResult(null);

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∫ Supabase –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
      const response = await fetch(`${import.meta.env.VITE_SUPABASE_URL}/auth/v1/settings`, {
        headers: {
          'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        setTestResult('‚úÖ Supabase –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö SMTP.');
      } else {
        setTestResult('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Supabase.');
      }
    } catch (error) {
      setTestResult('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase.');
    } finally {
      setTesting(false);
    }
  };

  const handleUseGoogle = async () => {
    try {
      await signInWithGoogle();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google:', error);
    }
  };

  if (!isSupabaseAvailable) {
    return null;
  }

  return (
    <div className="mt-4 border border-theme-border rounded-lg p-4 bg-theme-background">
      <button
        onClick={() => setIsExpanded(!isExpanded)}
        className="flex items-center justify-between w-full text-left text-sm font-medium text-theme-text hover:text-theme-primary transition-colors"
      >
        <span>üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å email</span>
        <svg 
          className={`w-4 h-4 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`}
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
        </svg>
      </button>

      {isExpanded && (
        <div className="mt-4 space-y-4">
          <div className="text-xs text-theme-text-secondary space-y-2">
            <p><strong>Email –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {email}</p>
            <p><strong>Redirect URL:</strong> {window.location.origin}/wishlist-checker/auth/callback</p>
            <p><strong>Supabase URL:</strong> {import.meta.env.VITE_SUPABASE_URL || '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}</p>
          </div>

          <div className="space-y-2">
            <h4 className="font-medium text-theme-text">–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</h4>
            <ul className="text-xs text-theme-text-secondary space-y-1 list-disc list-inside">
              <li>–í Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω SMTP —Å–µ—Ä–≤–µ—Ä</li>
              <li>Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–∏—Å—å–º–∞</li>
              <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞ –≤ Supabase</li>
              <li>–ü–∏—Å—å–º–æ –≤ –ø–∞–ø–∫–µ "–°–ø–∞–º"</li>
              <li>–õ–∏–º–∏—Ç—ã –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É email –≤ Supabase</li>
            </ul>
          </div>

          <div className="flex gap-2">
            <button
              onClick={handleTestEmailDelivery}
              disabled={testing}
              className="px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 transition-colors"
            >
              {testing ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫'}
            </button>
            
            <button
              onClick={handleUseGoogle}
              className="px-3 py-2 text-xs bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
            >
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
            </button>
          </div>

          {testResult && (
            <div className="text-xs p-2 rounded bg-theme-edit">
              {testResult}
            </div>
          )}

          <div className="text-xs text-theme-text-secondary bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded-lg">
            <p className="font-medium mb-1">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</p>
            <ul className="space-y-1 list-disc list-inside">
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Google –≤—Ö–æ–¥ –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É</li>
              <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ SMTP –≤ Supabase Dashboard</li>
              <li>–î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω –≤ Authentication Settings</li>
              <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Email Templates –≤ Supabase</li>
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}; 