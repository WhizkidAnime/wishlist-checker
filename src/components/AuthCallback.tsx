import React, { useEffect, useState } from 'react';
import { supabase } from '../utils/supabaseClient';

export const AuthCallback: React.FC = () => {
  const [loading] = useState(true);
  const [error] = useState<string | null>(null);

  useEffect(() => {
    const handleAuth = async () => {
      if (!supabase) {
        window.location.href = '/wishlist-checker/';
        return;
      }

      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –∏ hash
        const urlParams = new URLSearchParams(window.location.search);
        const hashParams = new URLSearchParams(
          window.location.hash.substring(1)
        );

        // –ò—â–µ–º –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –æ–±–æ–∏—Ö –º–µ—Å—Ç–∞—Ö
        const code = urlParams.get('code') || hashParams.get('code');
        const accessToken = hashParams.get('access_token');
        const refreshToken = hashParams.get('refresh_token');
        const errorCode = urlParams.get('error') || hashParams.get('error');
        const errorDescription = urlParams.get('error_description') || hashParams.get('error_description');

        // –î–µ—Ç–µ–∫—Ü–∏—è iOS PWA —Ä–µ–∂–∏–º–∞
        const isIOSPWA = () => {
          return (
            'standalone' in window.navigator &&
            (window.navigator as any).standalone === true &&
            /iPad|iPhone|iPod/.test(navigator.userAgent)
          );
        };

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üîç Auth Callback Debug:', {
          code: !!code,
          accessToken: !!accessToken,
          refreshToken: !!refreshToken,
          errorCode,
          errorDescription,
          isIOSPWA: isIOSPWA(),
          url: window.location.href,
          search: window.location.search,
          hash: window.location.hash
        });

        if (errorCode) {
          console.error('‚ùå OAuth Error:', errorCode, errorDescription);
          // –î–ª—è iOS PWA –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
          if (isIOSPWA() && errorCode === 'access_denied') {
            // –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤—Ö–æ–¥ - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
            window.location.href = '/wishlist-checker/';
            return;
          }
          // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ —Ç–æ–∂–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          window.location.href = '/wishlist-checker/';
          return;
        }

        if (code) {
          // –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Å—Å–∏—é
          console.log('üîÑ Exchanging code for session...');
          const { error } = await supabase.auth.exchangeCodeForSession(code);
          
          if (error) {
            console.error('‚ùå Code exchange error:', error);
            window.location.href = '/wishlist-checker/';
            return;
          }
          console.log('‚úÖ Code exchange successful');
        } else if (accessToken && refreshToken) {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ —Ç–æ–∫–µ–Ω–æ–≤
          console.log('üîÑ Setting session from tokens...');
          const { error } = await supabase.auth.setSession({
            access_token: accessToken,
            refresh_token: refreshToken,
          });

          if (error) {
            console.error('‚ùå Session set error:', error);
            window.location.href = '/wishlist-checker/';
            return;
          }
          console.log('‚úÖ Session set successful');
        } else {
          console.warn('‚ö†Ô∏è No auth parameters found, redirecting...');
          window.location.href = '/wishlist-checker/';
          return;
        }

        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –î–ª—è iOS PWA –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if (isIOSPWA()) {
          // –î–ª—è PWA –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å history API
          try {
            window.history.replaceState({}, '', '/wishlist-checker/');
            window.location.reload();
          } catch (e) {
            window.location.href = '/wishlist-checker/';
          }
        } else {
          // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
          window.location.href = '/wishlist-checker/';
        }
        
      } catch (error) {
        console.error('‚ùå Auth callback error:', error);
        window.location.href = '/wishlist-checker/';
      }
    };

    handleAuth();
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-theme-background">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-theme-primary mx-auto mb-4"></div>
          <p className="text-theme-text">–ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç...</p>
          <p className="text-theme-text-secondary text-sm mt-2">
            –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </p>
        </div>
      </div>
    );
  }

  if (error) {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
    React.useEffect(() => {
      const timer = setTimeout(() => {
        window.location.href = '/wishlist-checker/';
      }, 3000);
      
      return () => clearTimeout(timer);
    }, []);

    return (
      <div className="min-h-screen flex items-center justify-center bg-theme-background">
        <div className="text-center max-w-md mx-auto p-6">
          <div className="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
          <h2 className="text-xl font-bold text-theme-primary mb-4">
            –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞
          </h2>
          <p className="text-theme-text mb-4">{error}</p>
          <p className="text-theme-text-secondary text-sm">
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...
          </p>
          <button
            onClick={() => window.location.href = '/wishlist-checker/'}
            className="mt-4 px-4 py-2 bg-theme-primary text-white rounded-lg hover:opacity-90 transition-colors"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  return null;
}; 