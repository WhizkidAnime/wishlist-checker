import React, { useEffect, useState } from 'react';
import { supabase } from '../utils/supabaseClient';
import { getSiteUrl } from '../utils/authRedirect';
import { useSystemTheme, getSystemThemeClasses } from '../utils/systemTheme';
import { ErrorPage } from './ErrorPage';

export const AuthCallback: React.FC = () => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  
  // –°–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const systemTheme = useSystemTheme();
  const systemThemeClasses = getSystemThemeClasses(systemTheme);

  useEffect(() => {
    const handleAuth = async () => {
      if (!supabase) {
        window.location.href = getSiteUrl();
        return;
      }

      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –∏ hash
        const urlParams = new URLSearchParams(window.location.search);
        const hashParams = new URLSearchParams(
          window.location.hash.substring(1)
        );

        // –ò—â–µ–º –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –æ–±–æ–∏—Ö –º–µ—Å—Ç–∞—Ö
        const code = urlParams.get('code') || hashParams.get('code');
        const accessToken = hashParams.get('access_token');
        const refreshToken = hashParams.get('refresh_token');
        const errorCode = urlParams.get('error') || hashParams.get('error');
        const errorDescription = urlParams.get('error_description') || hashParams.get('error_description');

        // –î–µ—Ç–µ–∫—Ü–∏—è iOS PWA —Ä–µ–∂–∏–º–∞
        const isIOSPWA = () => {
          return (
            'standalone' in window.navigator &&
            (window.navigator as any).standalone === true &&
            /iPad|iPhone|iPod/.test(navigator.userAgent)
          );
        };

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üîç Auth Callback Debug:', {
          code: !!code,
          accessToken: !!accessToken,
          refreshToken: !!refreshToken,
          errorCode,
          errorDescription,
          isIOSPWA: isIOSPWA(),
          url: window.location.href,
          search: window.location.search,
          hash: window.location.hash
        });

        if (errorCode) {
          console.error('‚ùå OAuth Error:', errorCode, errorDescription);
          
          let errorMessage = '';
          let shouldRedirect = false;
          
          if (errorCode === 'access_denied') {
            if (isIOSPWA()) {
              shouldRedirect = true; // –î–ª—è iOS PWA —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
            } else {
              errorMessage = '–í—Ö–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º';
            }
          } else {
            errorMessage = `–û—à–∏–±–∫–∞ OAuth: ${errorDescription || errorCode}`;
          }
          
          if (shouldRedirect) {
            window.location.href = getSiteUrl();
            return;
          } else if (errorMessage) {
            setError(errorMessage);
            setLoading(false);
            return;
          }
        }

        if (code) {
          // –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Å—Å–∏—é
          console.log('üîÑ Exchanging code for session...');
          const { error } = await supabase.auth.exchangeCodeForSession(code);
          
          if (error) {
            console.error('‚ùå Code exchange error:', error);
            setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
            setLoading(false);
            return;
          }
          console.log('‚úÖ Code exchange successful');
        } else if (accessToken && refreshToken) {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ —Ç–æ–∫–µ–Ω–æ–≤
          console.log('üîÑ Setting session from tokens...');
          const { error } = await supabase.auth.setSession({
            access_token: accessToken,
            refresh_token: refreshToken,
          });

          if (error) {
            console.error('‚ùå Session set error:', error);
            setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Å—Å–∏–∏');
            setLoading(false);
            return;
          }
          console.log('‚úÖ Session set successful');
        } else {
          console.warn('‚ö†Ô∏è No auth parameters found, redirecting...');
          setError('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
          setLoading(false);
          return;
        }

        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º history API –≤–º–µ—Å—Ç–æ full page redirect –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å SPA
        try {
          const home = getSiteUrl();
          const homePath = new URL(home, window.location.origin).pathname;
          
          // –ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ history API –¥–ª—è SPA (–∏–∑–±–µ–≥–∞–µ–º 404 –Ω–∞ GitHub Pages)
          window.history.replaceState({}, '', homePath);
          
          // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è iOS PWA, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º URL
          if (isIOSPWA()) {
            window.location.reload();
          } else {
            // –î–ª—è SPA –¥–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏—è —á—Ç–æ–±—ã App.tsx –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è
            window.dispatchEvent(new PopStateEvent('popstate'));
          }
        } catch (e) {
          console.warn('‚ö†Ô∏è History API failed, using fallback redirect');
          window.location.href = getSiteUrl();
        }
        
      } catch (error) {
        console.error('‚ùå Auth callback error:', error);
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        setLoading(false);
      }
    };

    handleAuth();
  }, []);

  if (loading) {
    return (
      <div className={`min-h-screen flex items-center justify-center ${systemThemeClasses.background} transition-colors duration-200`}>
        <div className={`${systemThemeClasses.card} rounded-3xl shadow-lg p-8 text-center max-w-md mx-4 border ${systemThemeClasses.border}`}>
          <div className={`animate-spin rounded-full h-16 w-16 border-4 ${systemThemeClasses.spinner} mx-auto mb-6`}></div>
          <h2 className={`text-xl font-semibold ${systemThemeClasses.primary} mb-2`}>
            –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç...
          </h2>
          <p className={`${systemThemeClasses.textSecondary} text-sm`}>
            –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
        <ErrorPage
        errorCode="üîê"
        title="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        description={error}
          onReturnHome={() => window.location.href = getSiteUrl()}
        showReturnButton={true}
      />
    );
  }

  return null;
}; 